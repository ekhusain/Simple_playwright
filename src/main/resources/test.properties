# The url to start
baseURL=not_set_will_be_overridden_by_env

# webDriver driver
webdriver.mode=remote
#webdriver.mode=local
# remote*, local

#browser=firefox
browser=chrome
#browser=ie
#browser=edge
# firefox*, chrome, ie, htmlunit, mobile_chrome, mobile_safari

#firefox.version=52-esr
#firefox.version=57
#firefox.version=60
firefox.version=esr60
chrome.version=100
ie.version=11
edge.version=120

#selenium.server.url=http://test:test@192.168.61.183:4443/wd/hub
selenium.server.host=localhost
#selenium.server.host=192.168.61.183
#selenium.server.host=10.33.101.52

reportName=Simple

remote.system=local

selenium.mode=webdriver

selenium.server.port=4444

xeta.browser.maximize=true

# Schaltet den Demo Mode an (wenn true).
demomode=true

# webdriver.firefox.bin=C:\\Program Files (x86)\\Mozilla Firefox7\\firefox.exe
# Pfad zur IE-/Chrome-Driver exe (nur lokal, remote bei server Start angeben)
webdriver.chrome.driver=src\\main\\resources\\chromedriver.exe
webdriver.ie.driver=src\\main\\resources\\IEDriverServer.exe

# Take Screenshot for failed tests.
xeta.takeAutomaticScreenshot=true

# Timeout, die Page Klasse wartet, bis GuiElemente gefunden werden.
#element.timeout.seconds=8

screencaster.active=true
# Set max height of Screencaster
#xeta.screencast.maxheight=1200

failed.tests.max.retries=1

# Hier k\uFFFDnnen Klassen definiert werden, bei denen ein Retry ausgel\uFFFDst wird. Trennung der Klassen mit Komma,
# die f\uFFFDhrenden und schlie\uFFFDenden Leerzeichen werden getrimmt.
#failed.tests.if.throwable.classes=org.openqa.selenium.UnsupportedCommandException
# Hier k\uFFFDnnen Throwable Messages definiert werden, bei denen ein Retry ausgel\uFFFDst wird. Trennung der Messages mit Komma,
# die f\uFFFDhrenden und schlie\uFFFDenden Leerzeichen werden getrimmt.
#failed.tests.if.throwable.messages=Mandatory GuiElement >visibleDialog< was not found,$CQ is not defined,Link component Functional test,Error when launching application "chrome:http,Could not instantiate page class

# Properties um automatisches Schlie\uFFFDen der WebDriver-Fenster durch XetaListener zu beeinflussen.
wdm.closeWindows.onFailure=true
wdm.closeWindows.afterTestMethods=true

# Determines whether reference images where taken in the current run
xeta.screenreference.takereference=false
# Path where the reference screenshots where saved
xeta.screenreference.reference.path=src/test/resources/screenreference/{browser}
# Path where the actual images where saved
xeta.screenreference.actual.path=target/screenreference/{browser}/actual
# Path where the distance images where saved
xeta.screenreference.distance.path=target/screenreference/{browser}/distance
# Prefix for ReferenceScreenshots
xeta.screenreference.reference.nametemplate=Reference%s_base.png
# Prefix for AnnotatedReferenceScreenshots
xeta.screenreference.annotated.nametemplate=Reference%s.png
# Prefix for Actual images
xeta.screenreference.actual.nametemplate=Actual%s.png
# Prefix for Distance images
xeta.screenreference.distance.nametemplate=Distance%s.png

#xeta failure corridor parameters
xeta.failure.corridor.active=true
xeta.failure.corridor.allowed.failed.tests.high=0
xeta.failure.corridor.allowed.failed.tests.mid=1
xeta.failure.corridor.allowed.failed.tests.low=2

#xeta.watchdog.enable=false
#xeta.watchdog.timeout.seconds=600

xeta.guielement.default.assertcollector=false

#xeta.project.uuid=yours

xeta.layoutcomparator.match.threshold=80%

# Custom package for source analyzer to see the code snippets in XETA report
xeta.project.package=de.telekom.simple.ta

#Environment to start the test on
#env=test
env=dev

# For report
simple.branchname=

language=DE

# Simple DB credentials - should set by Maven command
simple.db.user=simple_sql_user
simple.db.pass=76Y6ZZVLRK8iqcwvsPi6MDAeF36pQT
